enunciados:
// ---------------------------------------- Aula 1-----------------------------------------//
semana 1: 
exemplo 1 - square
	 dado um numero inteiro , devolve o quadrado desse número.
	 


exercicios: 
A-Obter o dobro de um número. A definição desta função é muito semelhante ao exemplo dado inicialmente.

B-Obter a diferença entre dois números (dados em dois parâmetros).

C-Obter a percentagem de um valor relativamente a um total.
Exemplo: 2 num total de 8 corresponde a 25%. O valor de percentagem deverá ser devolvido num número real (double) no intervalo [0.0, 1.0].

static double percentage(int n, int total) {
    ...
}


D-Obter a média entre dois números inteiros.
N.B.: a média entre dois inteiros não é necessariamente um inteiro, logo, o tipo de retorno deverá ser decimal (double).

E-Arredondar um número decimal para inteiro.
Nesta função é necessário aplicar a truncagem (converter um decimal para inteiro, descartando a parte decimal).
Exemplos:

round(4.3) → 4
round(4.7) → 5

F-Saber se um número inteiro é negativo.
O valor devolvido pela função deverá indicar se o número passado como argumento é ou não negativo, mediante um valor booleano (boolean, que assume apenas os valores true ou false).
Exemplos:

isNegative(-2) → true
isNegative(3) → false

static boolean isNegative(int n) {
    ...
}

G-Saber se um número inteiro é impar.

Nesta e nas duas funções seguintes é necessário utilizar o operador aritmético de divisão inteira (%).

H-Saber se um número inteiro é par.

I-Saber se um número inteiro é múltiplo de outro.

J-Saber se um número inteiro corresponde a um dígito (i.e. está entre 0 e 9). Nesta função é necessário combinar duas condições lógicas (conjunção).

K-Saber se um número está incluído num dado intervalo (fechado).
Exemplos:

isIncluded(5, 4, 9) → true  (5 está incluído em [4, 9])
isIncluded(5, 6, 9) → false  (5 não está incluído em [6, 9])

L-Saber se um número está excluído de um dado intervalo (fechado).
Experimente uma solução baseada numa disjunção lógica e uma solução alternativa baseada numa negação da condição utilizada na alínea anterior.
Exemplos:

isExcluded(4, 4, 9) → false  (4 não está excluído de [4, 9])
isExcluded(4, 5, 9) → true  (4 está excluído de [5, 9])

M-Calcular a operação lógica disjunção exclusiva (XOR) entre dois valores booleanos.
Exemplos:

xor(true, false) → true
xor(false, true) → true
xor(true, true) → false
xor(false, false) → false

N-Saber se um carácter (char) corresponde a uma vogal minúscula.
Exemplos:

isVowel('a') → true
isVower('z') → false



//---------------------------Aula 2 -----------------------------------------------------------//

1- devolve o mínimo entre dois valores inteiros

2- devolve o resultado da multiplicação de dois números inteiros (sem recorrer ao operador *)


// Trabalho prévio
Desenvolva uma classe estática com funções que permitam:

A- Obter o máximo entre dois números.
Exemplo:

max(7, 9) → 9

Verificar se um número é múltiplo de um outro número, sem recurso ao operador de resto da divisão (%).
Exemplo:

B-isMultiple(25, 5) → true

//Exercícios
Defina funções que permitam:

A-Obter o valor absoluto de um número.
Exemplos:

abs(-2) → 2
abs(4) → 4

B-Obter o quociente da divisão inteira, sem recorrer ao operador de divisão (/).
Exemplos:

divide(31, 5) → 6
divide(35, 7) → 5

C-Obter uma potência de 2, i.e. 2n, dado o expoente num argumento que se assume ser um número natural n (diferente de zero).
Exemplo:

powerOfTwo(4) → 16
powerOfTwo(8) → 256

D-Obter o somatório dos números naturais até um dado n.
Exemplo:

sumOfNaturalsUpTo(5) → 15     (1 + 2 + 3 + 4 + 5)

E-Obter o somatório dos números naturais pares compreendidos num dado intervalo fechado.
Exemplo:

sumOfEvenNumbersBetween(3, 8) → 18     (4 + 6 + 8)

F-Obter o primeiro algarismo da representação decimal de um número inteiro.
Exemplos:

firstDigit(2011) → 2
firstDigit(1998) → 1

G-Obter o n-ésimo número da sequência de Fibonacci, considerando que o primeiro número da sequência tem número de ordem zero.
Recorde: os primeiros números da sequência de Fibonacci são 0, 1, 1, 2, 3, 5, 8, 13, 21, ...
Exemplo:

fibonacci(7) → 13

Sucessão de Fibonacci

//Exercícios extra
A-Defina uma função que recebe como argumento dois números naturais m e n e que calcula o máximo divisor comum desses dois números, usando o algoritmo de Euclides.
Exemplo:

gcd(25, 30) → 5
